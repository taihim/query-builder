services:
  frontend:
    build: 
      context: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - VITE_API_URL=${VITE_API_URL}

  backend:
    build: 
      context: ./backend
      target: builder
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: pnpm dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
    depends_on:
      - mysql
      - mssql
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD:-StrongP@ssw0rd!}
      - MSSQL_PID=Express
      - MSSQL_ENCRYPT=OPTIONAL
      - MSSQL_TRUST_SERVER_CERTIFICATE=true
    volumes:
      - mssql-data:/var/opt/mssql
      - ./mssql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" -b
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  mssql-data:
    driver: local 